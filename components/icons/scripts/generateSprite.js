import { vars, fs } from './script-utils.js';

const generateSprite = () => {
  const directories = {
    source: `${vars.componentSubdir}/`,
    dest: vars.componentFileAll,
  };

  const rewriteIcons = (file) => {
    let processedContents = '';
    try {
      // Get file contents.
      const contents = fs.readFileSync(directories.source + file, 'utf8');
      // Strip extension from file name.
      const fileSlug = file.replace('.svg', '');
      processedContents = contents.replace(/(?:\r\n|\r|\n)/g, '');

      console.log(processedContents);
      // Replace opening tag.
      processedContents = processedContents.replace(
        '<svg version="1.1" xmlns="http://www.w3.org/2000/svg"',
        `\n<symbol id="${fileSlug}"`,
      );

      processedContents = processedContents.replace(
        'width="24" height="24" ',
        '',
      );

      // Remove comment.
      processedContents = processedContents.replace(
        '<!-- Generated by IcoMoon.io -->',
        '',
      );

      // Replace closing tag.
      processedContents = processedContents.replace('</svg>', '\n</symbol>');
    } catch (err) {
      console.error(err);
    }

    return processedContents;
  };

  const makeFile = (dir) => {
    fs.readdir(dir.source, (err, files) => {
      // Catch error.
      if (err) {
        console.log(`Unable to scan directory: ${err}`);
      }

      // Start sprite.
      let html =
        '<svg style="display:none;" xmlns="http://www.w3.org/2000/svg">';

      // Get each symbol.
      files.forEach((file) => {
        if (file !== 'delete') {
          html += rewriteIcons(file);
        }
      });

      // End sprite.
      html += `</svg>`;

      // Write sprite.
      fs.writeFileSync(dir.dest, html);
      console.log(`==> CAGOV: ${dir.source} ==> ${dir.dest}`);
    });
  };

  makeFile(directories);
};

export default generateSprite;
